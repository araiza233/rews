<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd" xmlns:cache="http://www.springframework.org/schema/cache">
 
    <bean id="userBo" class="com.mkyong.user.bo.impl.UserBoImpl" />
    <bean id="securityDao" class="com.publicidad.dao.SecurityDaoImpl">
        <property name="hibernateTemplate" ref="hibernateTemplate"/>
    </bean>
    <bean id="securityInterceptorLogic" class="com.publicidad.logic.SecurityInterceptorImpl">
        <property name="securityDao" ref="securityDao" />
    </bean>    
    <bean id="interceptor" class="com.mkyong.user.action.SecurityInterceptor">
        <property name="securityInterceptorLogic" ref="securityInterceptorLogic" />
    </bean>
    <bean id="userSpringAction" class="com.mkyong.user.action.UserSpringAction">
        <property name="userBo" ref="userBo" />
        <property name="hibernateTemplate" ref="hibernateTemplate" />	
    </bean>
    <bean id="mostrarReporteAction" class="org.apache.struts.publicidad.action.ReportesAction">
        <property name="reportesLogic" ref="reportesLogic" />
        <property name="usuarioLogic" ref="usuarioLogic" />
    </bean>
    <bean id="ticketsAction" class="org.apache.struts.publicidad.action.TicketsAction">
        <property name="reportesLogic" ref="reportesLogic" />
    </bean>
    <bean id="jQueryAction" class="com.mkyong.user.action.JQueryAction">
        <property name="hibernateTemplate" ref="hibernateTemplate" />	
    </bean>
    
    <bean id="jQueryNuevoProducto" class="org.apache.struts.publicidad.action.NuevoProductoAction">
            <property name="producto" ref="producto" />
            <property name="ventas" ref="ventas" />
            <property name="detalleVentas" ref="detalleVentas" />
            <property name="nuevoProductoLogicInterface" ref="nuevoProductoLogicInterface" />	
    </bean>

    <bean id='dataSource' class='org.springframework.jdbc.datasource.DriverManagerDataSource'>
            <property name='driverClassName' value='org.postgresql.Driver' />
            <!--<property name='url' value='jdbc:postgresql://192.168.0.200:5432/moisex' />-->
            
            <property name='url' value='jdbc:postgresql://192.168.0.200:5432/publicidad' />
            <property name='username' value='postgres' />
            <property name='password' value='' />
            
            <!--
            <property name='url' value='jdbc:postgresql://127.4.170.130:5432/puntodeventa' />
            <property name='username' value='admindydyhhq' />
            <property name='password' value='tWx1AzVlzhut' />
            -->
    </bean>
 <!-- configure hibernate session factory -->
 <bean id='sessionFactory' class='org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean'>
      <property name='dataSource' ref='dataSource' />
      <property name='annotatedClasses' >
       <list>
	<value>com.publicidad.entities.Producto</value>
        <value>com.publicidad.entities.Ventas</value>
        <value>com.publicidad.entities.DetalleVentas</value>
        <value>com.publicidad.entities.Users</value>
       </list>
      </property>
      <property name='hibernateProperties'>
       <props>
        <prop key='dialect'>org.hibernate.dialect.PostgreSQLDialect</prop>
        <prop key='hibernate.show_sql'>true</prop>
        <prop key='hibernate.hbm2ddl.auto'>update</prop>
        <prop key='hibernate.query_factory_class'>org.hibernate.hql.ast.ASTQueryTranslatorFactory</prop>
        <prop key='hibernate.current_session_context_class'>org.hibernate.context.ThreadLocalSessionContext</prop>
        <prop key="hibernate.connection.useUnicode">true</prop>
        <prop key="hibernate.connection.characterEncoding">UTF-8</prop>
        <prop key="hibernate.connection.charSet">UTF-8</prop>
        <prop key="hibernate.connection.release_mode">after_statement</prop>
       </props>
      </property>
 </bean>
 <!--  
   configure the Spring hibernate template with the session factory from above  
--> 
   <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"> 
      <property name="sessionFactory">
          <ref bean="sessionFactory"/>
      </property> 
   </bean>
   <bean id="producto" class="com.publicidad.entities.Producto"></bean>
   <bean id="ventas" class="com.publicidad.entities.Ventas"></bean>
   <bean id="detalleVentas" class="com.publicidad.entities.DetalleVentas"></bean>
   <bean id="nuevoProductoLogicInterface" class="com.publicidad.logic.NuevoProductoLogic">
       <property name="nuevoProductoDao" ref="nuevoProductoDao" />
   </bean>
   <bean id="nuevoProductoDao" class="com.publicidad.dao.NuevoProductoDaoImp">
        <property name="hibernateTemplate" ref="hibernateTemplate" />
   </bean>
   <bean id="reportesLogic" class="com.publicidad.logic.ReportesLogicImplementation">
        <property name="reportesDao" ref="reportesDao" />
   </bean>
   <bean id="usuarioLogic" class="com.publicidad.logic.UsuarioLogicImpl">
        <property name="usuarioDao" ref="usuarioDao" />
   </bean>
   <bean id="reportesDao" class="com.publicidad.dao.ReportesDaoImplementation">
        <property name="hibernateTemplate" ref="hibernateTemplate" />
   </bean>
   <bean id="usuarioDao" class="com.publicidad.dao.UsuarioDaoImpl">
        <property name="hibernateTemplate" ref="hibernateTemplate" />
   </bean>
   <bean id="jQueryAccesos" class="org.apache.struts.publicidad.action.AccesosAction">
        <property name="acceso" ref="acceso" />	
   </bean>
   <bean id="acceso" class="com.publicidad.logic.AccesosImpl">
        <property name="securityDao" ref="securityDao" />
   </bean>
   <bean id="usuarios" class="org.apache.struts.publicidad.action.UsersAction">
        <property name="usuarioLogic" ref="usuarioLogic" />
   </bean>
   <bean id="precios" class="org.apache.struts.publicidad.action.PreciosAction">
   </bean>
</beans>